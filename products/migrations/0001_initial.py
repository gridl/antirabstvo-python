# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-06 10:14
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Код купона')),
                ('description', models.TextField(verbose_name='Описание')),
                ('procent_num', models.IntegerField(verbose_name='Скидка в процентах')),
                ('max_uses', models.IntegerField(blank=True, null=True, verbose_name='Максимальное количество использований')),
                ('max_uses_for_user', models.IntegerField(blank=True, null=True, verbose_name='Максимальное количество использований на пользователя')),
                ('coupon_date_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания купона')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_coupon', models.CharField(blank=True, max_length=20, null=True, verbose_name='Использованный купон')),
                ('gift_order', models.BooleanField()),
                ('to_email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Емейл получателя купона')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Сообщение получателю купона')),
                ('order_summ', models.IntegerField(verbose_name='Сумма заказа')),
                ('status', models.CharField(choices=[('new', 'Создан'), ('wait', 'Ожидается оплата'), ('cancel', 'Отменен'), ('success', 'Выполнен')], default='published', max_length=20, verbose_name='Статус')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Покупатель')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название продукта')),
                ('description', models.TextField(verbose_name='Описание продукта')),
                ('image', models.ImageField(blank=True, upload_to='uploads/products/images/', verbose_name='Картинка новости')),
                ('price', models.IntegerField(verbose_name='Цена продукта')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('hidden', 'Скрыто')], default='published', max_length=20, verbose_name='Статус')),
            ],
        ),
        migrations.AddField(
            model_name='orderproducts',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='products_to_use',
            field=models.ManyToManyField(blank=True, null=True, to='products.Product', verbose_name='Скидка действует только на товары:'),
        ),
    ]
